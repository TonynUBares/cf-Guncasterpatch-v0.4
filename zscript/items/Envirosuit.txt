#region Poweroops
//$Color 10

class Envirosuit : CustomInventory
{
	int EnvirosuitUnitTime;
	int EnvirosuitTimeCounter;
	
	property EnvirosuitUnitTime: EnvirosuitUnitTime;

	Default
	{
		Inventory.Icon 'ARTISUIT';
		Inventory.PickupMessage "You've got the asbestos suit! Doesn't seem to itch so badly.";
		Inventory.MaxAmount 100;
		Inventory.Amount 100;
		Inventory.InterHubAmount 0x7FFFFFFD;
		Inventory.PickupSound "Suit/Pickup";
		Inventory.UseSound "";
		Tag "Asbestos Suit";
		Scale 0.9;
		+INVENTORY.INVBAR
		+INVENTORY.UNDROPPABLE
		
		// Length of time each unit of Envirosuit remains viable.
		// Default is 5/3rds of a second, 100 tics.
		Envirosuit.EnvirosuitUnitTime 100;
	}
	
	States
	{
	Spawn:
		SUIT A -1;
		Stop;
	Use:
		TNT1 A 0 A_JumpIf(!CountInv("PowerDeadmaker"),2);
		TNT1 A 0 {
			A_PlaySound("Spell/Move",3,0.8);
			int randomese;
			randomese = random(0,5);
			switch(randomese)
			{
				default:
				case 0:
					A_Print("\c[white]Sorry, big guy, but I'm afraid you're too big to put that on.");
					break;
				case 1:
					A_Print("\c[white]What do you not understand in \"sorry, you're too effing big\"?");
					break;
				case 2:
					A_Print("\c[white]This is not the way.");
					break;
				case 3:
					A_Print("\c[white]STOP, YOU'RE VIOLATING THE LAW!");
					break;
				case 4:
					A_Print("\c[white]Do you really wanna tear it apart by trying to put your fat ass right in?");
					break;
				case 5:
					A_Print("\c[white]You will not fit in it, do you understanduuuu-");
					break;
			}
		}
		Fail;
		TNT1 A 0 A_JumpIf(!CountInv("PowerSuitToken"),2);
		TNT1 A 0 {
			A_PlaySound("Spell/Move",3,0.8);
			A_Print("\c[white]You already got Powersuit on.");
		}
		Fail;
		TNT1 A 0 A_JumpIf(GetCvar("GC_TraditionalSuit"), "InstantLockingBoys");
		Goto IWannaRock;
	Nope:
		TNT1 A 0;
		Fail;
	IWannaRock:
		TNT1 A 0 {
				Guncaster(self).GC_SetPreviousWeapon();
				A_GiveInventory("EnvirosuitWeapon");
				A_SelectWeapon("EnvirosuitWeapon");
			//}
		}
		Fail;
	InstantLockingBoys:
		TNT1 A 0 A_JumpIfInventory("PowerSuitProtect", 1, "Deactivate");
		TNT1 A 0 {
			A_PlaySound("Suit/In",3);
			A_GiveInventory("EnviroSet");
			A_GiveInventory("EnviroSet2");
			//ACS_NamedExecuteAlways("ARadsuitThing");
			if(!invoker.owner.GetCVar("GC_Permasuit"))
			{
				A_TakeInventory("Envirosuit", 1); // Discourages repeatedly removing the suit.
			}
		}
		Fail;
	Deactivate:
		TNT1 A 0 {
			A_PlaySound("Suit/Out",3);
			A_TakeInventory("PowerSuitProtect",1);
			A_TakeInventory("PowerSuitIronfeet",1);
		}
		Fail;
	}
	
	override void AttachToOwner(Actor user)
	{
		// Avoids garbage data.
		EnvirosuitTimeCounter = 0;
		Super.AttachToOwner(user);
	}
	
	override void DoEffect()
	{
		// Deplete the suit if it is in use.
		if(owner.CountInv("PowerSuitProtect") && !owner.GetCVar("GC_Permasuit"))
		{
			if(EnvirosuitTimeCounter >= EnvirosuitUnitTime)
			{
				owner.A_TakeInventory("Envirosuit", 1);
				EnvirosuitTimeCounter = 0;
			}
			else
			{
				EnvirosuitTimeCounter++;
			}
		}
		
		Super.DoEffect();
	}
	
	override void DetachFromOwner()
	{
		// Ran out of suit, remove the effects.
		owner.A_PlaySound("Suit/Out",3);
		owner.A_TakeInventory("PowerSuitProtect",1);
		owner.A_TakeInventory("PowerSuitIronfeet",1);
		if(owner && owner.player && owner == players[consoleplayer].mo)
		{
			Console.Printf("Asbestos suit depleted!");
		}
		Super.DetachFromOwner();
	}
	
	override void OwnerDied()
	{
		//owner.A_PlaySound("Suit/Out",3);
		owner.A_TakeInventory("PowerSuitProtect",1);
		owner.A_TakeInventory("PowerSuitIronfeet",1);
		Super.OwnerDied();
	}
}

class EnvirosuitWeapon : Weapon
{
	Default
	{
		Weapon.SelectionOrder 9;
		+WEAPON.CHEATNOTWEAPON
	}
	
	States
	{
	Spawn:
		TNT1 A 0;
		Loop;
	Fire:
		TNT1 A 0;
		Goto Ready;
	Select:
		TNT1 A 0 {
			A_SetCrosshair(77);
			A_Overlay(-4,"none");
			A_Overlay(3,"none");
			A_Overlay(2,"none");
			A_Overlay(-2,"none");
			A_Overlay(-3,"none");
			A_Overlay(-5,"none");
			A_Overlay(-6,"none");
			A_Overlay(-7,"none");
			A_Overlay(-8,"none");
		}
		TNT1 A 0 A_Raise;
		Wait;
	Deselect:
		TNT1 A 0 A_Lower;
		Loop;
	Ready:
		TNT1 A 0 A_JumpIf(CountInv("PowerSuitProtect"), 2);
		TNT1 A 0 A_Overlay(2,"RightPart");
		Goto GoOn;
		TNT1 A 0 A_Overlay(3,"LeftPartOff");
		Goto GoOn;
	GoOn:
		TNT1 A 30;
		TNT1 A 0 {
			let myplayvars = Guncaster(self);
			A_SelectWeapon(myplayvars.PreviousWeapon);
		}
		Goto Aaagh;
	Aaagh:
		TNT1 A 1 A_WeaponReady;
		Loop;
	
	//ON
		
	RightPart:
		//PART 1
		CYUT A 1 A_OverlayOffset(OverlayID(),201,140);
		CYUT A 1 A_OverlayOffset(OverlayID(),182,117,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),159,82,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),140,55,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),132,45,WOF_INTERPOLATE);
		CYUT B 4 A_OverlayOffset(OverlayID(),129,42,WOF_INTERPOLATE);
		CYUT B 0 A_PlaySound("Suit/In",5);
		//PART 2
		CYUT B 0 A_Overlay(3,"LeftPart");
		CYUT B 1 A_OverlayOffset(OverlayID(),128,41,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),127,40,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),126,39,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),125,38,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),124,37,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),123,36,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),122,35,WOF_INTERPOLATE);
		CYUT B 1;
		C1UP A 4 {
			A_GiveInventory("EnviroSet");
			A_GiveInventory("EnviroSet2");
			//ACS_NamedExecuteAlways("ARadsuitThing");
			if(!invoker.owner.GetCVar("GC_Permasuit"))
			{
				A_TakeInventory("Envirosuit", 1); // Discourages repeatedly removing the suit.
			}
		}
		//PART 3
		C1UP A 1 A_OverlayOffset(OverlayID(),124,36,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),128,39,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),136,49,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),146,62,WOF_INTERPOLATE);
		C1UP C 1 A_OverlayOffset(OverlayID(),156,77,WOF_INTERPOLATE);
		C1UP B 1 A_OverlayOffset(OverlayID(),168,102,WOF_INTERPOLATE);
		C1UP B 1 A_OverlayOffset(OverlayID(),179,127,WOF_INTERPOLATE);
		C1UP B 1 A_OverlayOffset(OverlayID(),187,151,WOF_INTERPOLATE);
		Stop;
	LeftPart:
		//PART 2
		CYUT C 1 A_OverlayOffset(OverlayID(),-5,153);
		CYUT C 1 A_OverlayOffset(OverlayID(),-17,136,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-29,118,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-37,107,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-44,98,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-46,96,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-48,94,WOF_INTERPOLATE);
		CYUT C 4 A_OverlayOffset(OverlayID(),-49,93,WOF_INTERPOLATE);
		//PART 3
		CYUH A 1 A_OverlayOffset(OverlayID(),-52,95,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-58,97,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-67,104,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-78,113,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-91,123,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-98,133,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-103,140,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-111,150,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-115,159,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-118,165,WOF_INTERPOLATE);
		Stop;
		
	//OFF
		
	LeftPartOff:
		//PART 1
		CYUH A 1 A_OverlayOffset(OverlayID(),-118,165);
		CYUH A 1 A_OverlayOffset(OverlayID(),-115,159,WOF_INTERPOLATE);
		//PART 2
		CYUH A 0 A_Overlay(2,"RightPartOff");
		CYUH A 1 A_OverlayOffset(OverlayID(),-111,150,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-103,140,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-98,133,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-91,123,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-78,113,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-67,104,WOF_INTERPOLATE);
		//PART 3
		CYUH A 1 A_OverlayOffset(OverlayID(),-58,97,WOF_INTERPOLATE);
		CYUH A 1 A_OverlayOffset(OverlayID(),-52,95,WOF_INTERPOLATE);
		CYUH A 4 A_OverlayOffset(OverlayID(),-49,93,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-48,94,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-46,96,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-44,98,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-37,107,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-29,118,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-17,136,WOF_INTERPOLATE);
		CYUT C 1 A_OverlayOffset(OverlayID(),-5,153,WOF_INTERPOLATE);
		Stop;
		
	RightPartOff:
		//PART 2
		C1UP B 1 A_OverlayOffset(OverlayID(),187,151);
		C1UP B 1 A_OverlayOffset(OverlayID(),179,127,WOF_INTERPOLATE);
		C1UP B 1 A_OverlayOffset(OverlayID(),168,102,WOF_INTERPOLATE);
		C1UP C 1 A_OverlayOffset(OverlayID(),156,77,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),146,62,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),136,49,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),128,39,WOF_INTERPOLATE);
		C1UP A 1 A_OverlayOffset(OverlayID(),124,36,WOF_INTERPOLATE);
		//PART 3
		C1UP A 4;
		C1UP A 0 A_PlaySound("Suit/Out",5);
		CYUT B 1;
		CYUT B 1 A_OverlayOffset(OverlayID(),122,35,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),123,36,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),124,37,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),125,38,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),126,39,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),127,40,WOF_INTERPOLATE);
		CYUT B 1 A_OverlayOffset(OverlayID(),128,41,WOF_INTERPOLATE);

		CYUT B 4 A_OverlayOffset(OverlayID(),129,42,WOF_INTERPOLATE);
		CYUT B 0 {
			A_TakeInventory("PowerSuitProtect",1);
			A_TakeInventory("PowerSuitIronfeet",1);
		}
		CYUT A 1 A_OverlayOffset(OverlayID(),132,45,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),140,55,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),159,82,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),182,117,WOF_INTERPOLATE);
		CYUT A 1 A_OverlayOffset(OverlayID(),201,140,WOF_INTERPOLATE);
		Stop;
	}
}


class EnviroSet : PowerupGiver
{
	Default
	{
		Inventory.MaxAmount 0;
		Powerup.Type "PowerSuitProtect";
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
	}
}

class EnviroSet2 : PowerupGiver
{
	Default
	{
		Inventory.MaxAmount 0;
		Powerup.Type "PowerSuitIronfeet";
		+INVENTORY.AUTOACTIVATE
		+INVENTORY.ALWAYSPICKUP
	}
}

class PowerSuitProtect : PowerProtection
{
	Default
	{
		Powerup.Duration 0x7FFFFFFD;
		Powerup.Color 'Orange', 0.02; //0.05;
		//Inventory.Icon "ENVMASK0";
		
		DamageFactor "Fire", 0.2;
		DamageFactor "Acid", 0.5;
		DamageFactor "Ice", 0.75;
		
		DamageFactor "Slime", 0.0;
		DamageFactor "Poison", 0.0;
		DamageFactor "Matriarch", 0.6;
		//DamageFactor "Drowning", 0.0; provided by the ironfeet-sided effect.
		DamageFactor "PoisonCloud", 0.0;
		DamageFactor "InstantDeath", 0.0; //Yes.
		
		DamageFactor "Flesh", 0.75;
		DamageFactor "Lightning", 0.75;
		DamageFactor "LightningBlue", 0.75;
		DamageFactor "Tiberium", 0.75;
		DamageFactor "BlueTiberium", 0.75;
		
		/*DamageFactor "Normal", 0.8;
		DamageFactor "Fire", 0.2;
		DamageFactor "Acid", 0.25;
		DamageFactor "Ice", 0.6;
		
		DamageFactor "Slime", 0.0;
		DamageFactor "Poison", 0.0;
		DamageFactor "Matriarch", 0.1;
		//DamageFactor "Drowning", 0.0; provided by the ironfeet-sided effect.
		DamageFactor "PoisonCloud", 0.0;
		DamageFactor "InstantDeath", 0.0; //Yes.
		
		DamageFactor "Flesh", 0.75;
		DamageFactor "Lightning", 0.75;
		DamageFactor "LightningBlue", 0.75;
		DamageFactor "Tiberium", 0.75;
		DamageFactor "BlueTiberium", 0.75;*/
		
		//+INVENTORY.PERSISTENTPOWER
		+INVENTORY.HUBPOWER
	}
	
	override void DoEffect()
	{
		if(owner.CountInv("PowerSuitToken"))
		{
			Icon = TexMan.CheckForTexture("ENVMASK0", TexMan.Type_Sprite);
		}
		else
		{
			Icon = GetDefaultByType("PowerSuitProtect").Icon;
		}
		Super.DoEffect();
		return;
	}
}

class PowerSuitIronfeet : PowerIronFeet
{
	Default
	{
		Powerup.Duration 0x7FFFFFFD;
		Powerup.Color "000000", 0.0;
		//+INVENTORY.PERSISTENTPOWER
		+INVENTORY.HUBPOWER
	}
}

#endregion
