class ThrowObjectWeapon : GuncasterWeapon
{
	Default
	{
		Weapon.SelectionOrder 99;
		+WEAPON.CHEATNOTWEAPON;
		+WEAPON.NO_AUTO_SWITCH;
	}
	
	States
	{
	Spawn:
		TNT1 A -1;
		Stop;
	Select:
		TNT1 A 1 ACS_NamedExecuteAlways("SbarinfoFix",0,0,1,2);
		TNT1 A 0 {
			A_Overlay(100,"SprintHandle");
			A_Overlay(-9,"KickActive");
			A_Overlay(3,"none");
			A_Overlay(2,"none");
			A_Overlay(-2,"none");
			A_Overlay(-3,"none");
			A_Overlay(-5,"none");
			A_Overlay(-6,"none");
			A_Overlay(-7,"none");
			A_Overlay(-8,"none");
			A_SetCrosshair(57);
		}
		TNT1 A 0 A_Raise;
		Wait;
	Deselect:
		TNT1 A 1 ACS_NamedExecuteAlways("SbarinfoFix",0,1,1,2);
		TNT1 A 0 SetPlayerProperty(0,0,2);
		TNT1 A 0 A_Lower;
		Wait;
	Ready:
		TNT1 A 0 A_JumpIf(AimTarget() is "PopBarrel2", "GrabStrifeBarrel");
		TNT1 A 0 A_JumpIf(AimTarget() is "PopBarrel", "GrabBarrel");
		TNT1 A 0 A_JumpIf(AimTarget() is "PodZwei", "GrabPod");
		Goto OutOfStuff;
	GrabBarrel:
		"####" "#" 0 {
			A_Remove(AAPTR_PLAYER_GETTARGET,RMVF_NOMONSTERS|RMVF_MISC,"PopBarrel");
			A_GiveInventory("BarrelGrabbed",1);
		}
		Goto GrabIt;
	GrabStrifeBarrel:
		"####" "#" 0 {
			A_Remove(AAPTR_PLAYER_GETTARGET,RMVF_NOMONSTERS|RMVF_MISC,"PopBarrel2");
			A_GiveInventory("BarrelGrabbed2",1);
		}
		Goto GrabIt;
	GrabPod:
		"####" "#" 0 {
			A_Remove(AAPTR_PLAYER_GETTARGET,RMVF_NOMONSTERS|RMVF_MISC,"PodZwei");
			A_GiveInventory("PodGrabbed",1);
		}
		Goto GrabIt;
	GrabIt:
		"####" "#" 0 A_JumpIf(CountInv("PowerDeadmaker"),"DeadGrabIt");
		"####" "#" 0 A_PlaySound("Melee/Swing",0,0.6);
		CYCH H 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH H 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH H 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH H 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),298,77);
		"####" "#" 1 A_OverlayOffset(OverlayID(),249,68,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),181,66,WOF_INTERPOLATE);
		//"####" "#" 1 A_OverlayOffset(OverlayID(),127,71,WOF_INTERPOLATE);
		"####" "#" 0 {
			if(CountInv("BarrelGrabbed") || CountInv("BarrelGrabbed2")) {
				A_PlaySound("Propane/Pick",6,0.7);
			} else if(CountInv("PodGrabbed")) {
				A_PlaySound("gumpoptome_active",6,0.7);
			}
		}
		"####" "#" 1 A_OverlayOffset(OverlayID(),82,79,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),26,89,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),-41,98,WOF_INTERPOLATE);
		//"####" "#" 1 A_OverlayOffset(OverlayID(),-89,114,WOF_INTERPOLATE);
		TNT1 A 1;
	Ready2:
		TNT1 A 0 A_JumpIf(CountInv("BarrelGrabbed") || CountInv("BarrelGrabbed2") || CountInv("PodGrabbed"),2);
		TNT1 A 1 A_WeaponReady(WRF_NOFIRE);
		Loop;
		TNT1 A 1 A_WeaponReady(WRF_NOSWITCH);
		Loop;
	Fire:
		C5CP A 0 A_JumpIfInventory("PowerSuitToken",1,5);
		C5UP A 0 A_JumpIfInventory("PowerSuitProtect",1,4);
		C5YP A 0 A_JumpIfInventory("PowerSuitDraugh",1,3);
		C5MP A 0 A_JumpIfInventory("PowerMidasMode",1,2);
		C5GP A 0;
		"####" A 0 {
			if(CountInv("PowerSuitToken") && !CountInv("PowerDeadmaker")) { A_PlaySound("Bishop/Fist",6,0.7); }
			else 						   { A_PlaySound("Melee/Swing",0,0.6); }
			 A_Overlay(4,"PunchRecoil4");
			if(random(1,4) == 1) { A_PlaySound("Guncaster/Kick",2); }
		}
		"####" C 1 A_OverlayOffset(OverlayID(),225,95);
		"####" C 1 A_OverlayOffset(OverlayID(),177,52,WOF_INTERPOLATE);
		"####" C 1 A_OverlayOffset(OverlayID(),142,32,WOF_INTERPOLATE);
		"####" A 0 {
			If(CountInv("BarrelGrabbed"))
			{
				A_TakeInventory("BarrelGrabbed",1);
				A_FireProjectile("PopBarrelThrown",0,0);
			}
			Else If(CountInv("BarrelGrabbed2"))
			{
				A_TakeInventory("BarrelGrabbed2",1);
				A_FireProjectile("PopBarrel2Thrown",0,0);
			}
			Else
			{
				A_TakeInventory("PodGrabbed",1);
				A_FireProjectile("PodZweiThrown",0,0);
			}
			Return ResolveState(Null);
		}
		"####" A 1 A_OverlayOffset(OverlayID(),118,54,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),81,96,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),45,149,WOF_INTERPOLATE);
	OutOfStuff:
		TNT1 A 1 {
			A_OverlayOffset(OverlayID(),0,0);
			let myplayvars = Guncaster(self);
			A_SelectWeapon(myplayvars.PreviousWeapon);
		}
		Goto Ready2;
	AltFire:
		TNT1 A 0 {
			if(CountInv("BarrelGrabbed")) { A_SpawnItemEx("PopBarrel",32,0,10); A_TakeInventory("BarrelGrabbed",0); Return ResolveState("OutOfStuff"); }
			if(CountInv("BarrelGrabbed2")) { A_SpawnItemEx("PopBarrel2",32,0,10); A_TakeInventory("BarrelGrabbed2",0); Return ResolveState("OutOfStuff"); }
			else						  { A_SpawnItemEx("PodZwei",32,0,10); A_TakeInventory("PodGrabbed",0); Return ResolveState("OutOfStuff"); }
			Return ResolveState(Null);
		}
		Goto Ready2;
		
	//Deadmaker stuff.
	DeadGrabIt:
		"####" A 0 {
			if(CountInv("PowerSuitToken")) { A_StartSound("Prophet/Move",8,0,0.9); }
			A_PlaySound("Deadmaker/Woosh",5);
		}
		OCLW A 0 A_JumpIf(CountInv("PowerSuitToken"),3);
		DCLW A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		NCLW A 0;
		"####" A 1 A_OverlayOffset(OverlayID(),299+32,-44);
		"####" A 1 A_OverlayOffset(OverlayID(),240+32,-14,WOF_INTERPOLATE);
		"####" B 1 A_OverlayOffset(OverlayID(),199+32,13,WOF_INTERPOLATE);
		"####" B 1 A_OverlayOffset(OverlayID(),135+32,35,WOF_INTERPOLATE);
		"####" C 1 A_OverlayOffset(OverlayID(),75+32,57,WOF_INTERPOLATE);
		"####" "#" 0 {
			if(CountInv("BarrelGrabbed") || CountInv("BarrelGrabbed2")) {
				A_PlaySound("Propane/Pick",6,0.7);
			} else if(CountInv("PodGrabbed")) {
				A_PlaySound("gumpoptome_active",6,0.7);
			}
		}
		//"####" C 1 A_OverlayOffset(OverlayID(),59,84+32,WOF_INTERPOLATE);
		"####" D 1 A_OverlayOffset(OverlayID(),-3,121+32,WOF_INTERPOLATE);
		"####" D 1 A_OverlayOffset(OverlayID(),-33,142+32,WOF_INTERPOLATE);
		TNT1 A 6 A_OverlayOffset(OverlayID(),0,32);
	DeadGrabReady:
		TNT1 A 0 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK, "AltFire");
		TNT1 A 1 A_JumpIf(GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "DeadGrabThrow");
		Loop;
	DeadGrabThrow:
		"####" A 0 {
			if(CountInv("PowerSuitToken")) { A_PlaySound("Prophet/Move",6,0.9); }
			A_PlaySound("Deadmaker/Woosh",5);
			if(random(1,4) == 1) { A_PlaySound("Guncaster/Kick",2); }
		}
		OCLW A 0 A_JumpIf(CountInv("PowerSuitToken"),3);
		DCLW A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		NCLW A 0;
		"####" A 1 A_OverlayOffset(OverlayID(),252,81+32);
		//"####" A 1 A_OverlayOffset(OverlayID(),196,50+32,WOF_INTERPOLATE);
		"####" B 1 A_OverlayOffset(OverlayID(),173,43+32,WOF_INTERPOLATE);
		//"####" B 1 A_OverlayOffset(OverlayID(),116,20+32,WOF_INTERPOLATE);
		"####" C 0 {
			If(CountInv("BarrelGrabbed"))
			{
				A_TakeInventory("BarrelGrabbed",1);
				A_FireProjectile("PopBarrelThrown",0,0);
			}
			Else If(CountInv("BarrelGrabbed2"))
			{
				A_TakeInventory("BarrelGrabbed2",1);
				A_FireProjectile("PopBarrel2Thrown",0,0);
			}
			Else
			{
				A_TakeInventory("PodGrabbed",1);
				A_FireProjectile("PodZweiThrown",0,0);
			}
			Return ResolveState(Null);
		}
		"####" C 1 A_OverlayOffset(OverlayID(),91,22+32,WOF_INTERPOLATE);
		//"####" C 1 A_OverlayOffset(OverlayID(),55,34+32,WOF_INTERPOLATE);
		"####" D 1 A_OverlayOffset(OverlayID(),6,77+32,WOF_INTERPOLATE);
		"####" D 1 A_OverlayOffset(OverlayID(),-24,104+32,WOF_INTERPOLATE);
		Goto OutOfStuff;
		
	//Deadmaker sprint. Ravioli Ravioli Pizza fucking Pasta code. I should fix this. Somehow. Maybe in another life.
	SprintHandle:
		TNT1 A 1 {
			if(!CountInv("PowerDeadmaker")) { Return ResolveState(Null); }
			if(Guncaster(self).ChargeCooldown) { Guncaster(self).ChargeCooldown--; Return ResolveState(Null); }
			
			//if(GetPlayerInput(INPUT_BUTTONS) & BT_ZOOM) {
				if(CountInv("DeadmakerCharger") /*&& GetPlayerInput(INPUT_BUTTONS) & BT_ZOOM*/ && GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD) { Return ResolveState("SprintMain"); }
				if(Invoker.GracePeriod && (GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD) && !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_FORWARD)) {
					Return ResolveState("SprintMain");
				}
				if((GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD) && !(GetPlayerInput(INPUT_OLDBUTTONS) & BT_FORWARD)) {
					Invoker.GracePeriod = GetCvar("GC_SprintTimer");
				}
			//}
			A_TakeInventory("DeadmakerCharger",1);
			//A_LogInt(Guncaster(self).ChargeFuel);
			if(Invoker.GracePeriod) { Invoker.GracePeriod--; }
			Return ResolveState(Null);
		}
		Loop;
	SprintMain:
		TNT1 A 1 {
			if(!Guncaster(self).ChargeCooldown && Guncaster(self).ChargeFuel > 72 && !(GetPlayerInput(INPUT_BUTTONS) & BT_CROUCH) && 
			  /* GetPlayerInput(INPUT_BUTTONS) & BT_ZOOM &&*/ GetPlayerInput(INPUT_BUTTONS) & BT_FORWARD) {
				Invoker.GracePeriod = 0;
				if(Guncaster(self).ChargeFuel <= 75) {
					A_TakeInventory("DeadmakerCharger",1);
					Guncaster(self).ChargeCooldown = 50;
					Return ResolveState(Null);
				}
				if(Player.OnGround && !CountInv("DeadmakerCharger")) {
					A_PlaySound("Stomp/Use",7);
					A_GiveInventory("DeadmakerCharger",1);
				}
				Return A_Jump(256,1);
			} else {
				A_TakeInventory("DeadmakerCharger",1);
			}
			Return ResolveState(Null);
		}
		Goto SprintHandle;
		TNT1 A 1 {
			if(Player.OnGround) {
				Guncaster(self).ChargeFuel = Guncaster(self).ChargeFuel - random(1,2);
				A_Recoil(-3.0);
			} else if(CountInv("DeadmakerCharger")) {
				Guncaster(self).ChargeFuel = Guncaster(self).ChargeFuel - 1;
				A_Recoil(-2.0);
			}
		}
		Goto SprintHandle;
	}
}