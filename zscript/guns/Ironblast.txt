#region Gnus
//$color 14

/*
fun fact: Ironblast at the beginning was supposed to be a four-barreled break-action
old timer ornamented shotgun. Then we moved onto six-barreled, slightly more modern
break-action one. As a final design, we went for futuristic eight-barreled pump-action.
*/

#include "Zscript/Guns/Projectile/Ironblast.txt"
#include "Zscript/Guns/Projectile/IronStrat.txt"

class IronblastSelected : Inventory { Default { Inventory.MaxAmount 1; } }
class IronblastMag : Inventory { Default { Inventory.MaxAmount 3; } }
class IronblastMag2 : IronblastMag {}
class SupermagTimer : Inventory { Default { Inventory.MaxAmount 350; } }
class SupermagTimer2 : SupermagTimer {}

//Hexen version.
class IronblastHexen : RandomSpawner replaces FWeapHammer
{
	Default
	{
		DropItem "Ironblast";
	}
}

//Heretic version.
//OH RIGHT. THERE IS NONE!

class Ironblast : GuncasterWeapon 
{
    Default
    {
		Inventory.PickupSound "misc/w_pkup";
		Inventory.PickupMessage "$GOTIRONBLAST";
		Obituary "$KILLIRONBLAST";
		Weapon.UpSound "Ironblast/Up";
		Weapon.SelectionOrder 1;
		Weapon.AmmoGive 16;
		Weapon.AmmoType "ShotgunAmmo";
		Weapon.AmmoUse 8;
		Weapon.SlotNumber 3;
		Weapon.BobStyle 'InverseSmooth';
		Weapon.BobSpeed 1.4;
		Weapon.BobRangeY 0.5;
		Weapon.BobRangeX 1.2;
		GuncasterWeapon.twoHandedWeapon TRUE;
		Scale 0.95;
	}
	
	//Strat drop.
	override void PostBeginPlay()
	{
		if(!bDROPPED && random(0,20) == 0)
		{
			A_DropItem("IronblastStratGiver",-1,256);
		}
		Super.PostBeginPlay();
		Return;
	}
	
	//Hexen handling.
	override Void AttachToOwner (actor user) {
		if(gameinfo.gametype == Game_HEXEN) {
			AmmoGive1 = 48;
			AmmoType1 = "GreenMana";
			AmmoUse1 = 8;
		}
		//Also handling for pickup sound, given that's different.
		if(gameinfo.gametype == Game_HEXEN || gameinfo.gametype == Game_HERETIC) {
			PickupSound = "Guncaster/Laugh1";
		}
		Super.AttachToOwner(user);
	}
	
	int GunzerkShot; //So the gun won't change the frames mid-through a firing anim.
	int GunzerkShot2;
	
	States
	{
	Spawn:
		IRNG X -1;
		Stop;

	SelectStuff:
		TNT1 A 0 {
			//A_Overlay(99,"Debug");
			invoker.GunzerkShot = 0;
			invoker.GunzerkShot2 = 0;
			/*A_TakeInventory("IronblastMag",0);
			A_TakeInventory("IronblastMag2",0);*/
			A_GiveInventory("IronblastSelected",1);
			A_SetCrosshair(51);
			ACS_NamedExecuteAlways("SbarinfoFix",0,0,1,2);
		}
		Goto SelectLoop;
		
	DeselectStuff:
		TNT1 A 0 {
			if(CountInv("IronblastMag") >=  GetDefaultByType("IronblastMag").MaxAmount  && CountInv("SupermagJohnson")) { A_SetInventory("IronblastMag",0); }
			if(CountInv("IronblastMag2") >= GetDefaultByType("IronblastMag2").MaxAmount && CountInv("SupermagJohnson")) { A_SetInventory("IronblastMag2",0); }
			A_TakeInventory("IronblastSelected",1);
			ACS_NamedExecuteAlways("SbarinfoFix",0,1,1,2);
		}
		Goto DeselectLoop;
	/*Debug:
		TNT1 A 35 {
			if(CountInv("PowerGunzerking") || GC_Gunslinger)
			{
				A_Log(String.Format("WeapAction %i", invoker.WeapAction));
				A_Log(String.Format("LeftHand %i", invoker.LeftHand));
			}
		}
		Loop;*/
		
	//STRAT
	
	ShotgunPossession:
		"####" A 0 A_JumpIfInventory("FloaterblastActive",1,"Achtung");
		"####" A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"), "GunzerkPossession");
		"####" A 0 {
			invoker.LeftHand = 1;
			A_Overlay(-4,"UnderHand1");
		}
		ERNG A 5;
		ERNG A 1 A_OverlayOffset(OverlayID(),1,1,WOF_INTERPOLATE);
		ERNG A 1 A_OverlayOffset(OverlayID(),3,3,WOF_INTERPOLATE);
		ERNG A 1 A_OverlayOffset(OverlayID(),6,5,WOF_INTERPOLATE);
		ERNG A 6 A_OverlayOffset(OverlayID(),7,6,WOF_INTERPOLATE);
		"####" A 0 {
			A_PlaySound("Ironspirit/Syringe",6);
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(8, 8, 8, 15, 0, 64, "none", QF_SCALEDOWN); }
			A_SetBlend("Red",0.3,25);
		}
		IRSG A 1 A_OverlayOffset(OverlayID(),15,13,WOF_INTERPOLATE);
		IRSG A 1 A_OverlayOffset(OverlayID(),20,18,WOF_INTERPOLATE);
		IRSG B 1 Bright A_OverlayOffset(OverlayID(),22,20,WOF_INTERPOLATE);
		IRSG C 1 Bright A_OverlayOffset(OverlayID(),19,17,WOF_INTERPOLATE);
		IRSG D 1 Bright A_OverlayOffset(OverlayID(),17,15,WOF_INTERPOLATE);
		IRSG E 1 Bright A_OverlayOffset(OverlayID(),14,13,WOF_INTERPOLATE);
		IRSG F 1 Bright A_OverlayOffset(OverlayID(),11,11,WOF_INTERPOLATE);
		IRSG G 1 Bright A_OverlayOffset(OverlayID(),9,9,WOF_INTERPOLATE);
		IRSG H 1 Bright A_OverlayOffset(OverlayID(),7,7,WOF_INTERPOLATE);
		IRSG I 1 Bright A_OverlayOffset(OverlayID(),5,5,WOF_INTERPOLATE);
		IRSG J 1 Bright A_OverlayOffset(OverlayID(),3,3,WOF_INTERPOLATE);
		IRSG K 1 Bright A_OverlayOffset(OverlayID(),2,2,WOF_INTERPOLATE);
		IRSG L 1 A_OverlayOffset(OverlayID(),1,1,WOF_INTERPOLATE);
		IRSG M 1 A_OverlayOffset(OverlayID(),0,0,WOF_INTERPOLATE);
		IRSG NOPQRSSTT 1;
		IROG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		IRDG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		IRTG A 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		IRCG A 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		IRUG A 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		IRYG A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		IRNG A 0;
		"####" A 10;
		"####" A 0 A_PlaySound("Ironspirit/Activate",5);
		"####" H 1 A_OverlayOffset(OverlayID(),3,2,WOF_INTERPOLATE);
		"####" H 1 A_OverlayOffset(OverlayID(),6,6,WOF_INTERPOLATE);
		"####" I 1 A_OverlayOffset(OverlayID(),14,19,WOF_INTERPOLATE);
		"####" I 1 A_OverlayOffset(OverlayID(),19,28,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),19,48);
		"####" J 1 A_OverlayOffset(OverlayID(),25,59,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),29,67,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),34,80,WOF_INTERPOLATE);
		"####" K 1 A_OverlayOffset(OverlayID(),18,92);
		"####" K 1 A_OverlayOffset(OverlayID(),23,105,WOF_INTERPOLATE);
		"####" K 1 A_OverlayOffset(OverlayID(),27,120,WOF_INTERPOLATE);
		"####" L 1 A_OverlayOffset(OverlayID(),19,134,WOF_INTERPOLATE);
		"####" L 1 A_OverlayOffset(OverlayID(),22,150,WOF_INTERPOLATE);
		"####" L 1 A_OverlayOffset(OverlayID(),23,162,WOF_INTERPOLATE);
		"####" L 1 A_OverlayOffset(OverlayID(),25,172,WOF_INTERPOLATE);
		TNT1 A 3;
		"####" A 1 {
			invoker.LeftHand = 0;
			A_SetBlend("Black",1.0,25);
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(8, 8, 8, 15, 0, 64, "none", QF_SCALEDOWN); }
			A_FireProjectile("FloatingIronblast",0,0,0,0);
			A_GiveInventory("IronblastStratActive");
			A_TakeInventory("Ironblast");
		}
		Stop;
	UnderHand1:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),85,106);
		"####" "#" 1 A_OverlayOffset(OverlayID(),82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),69,176,WOF_INTERPOLATE);
		"####" "#" 0 A_Overlay(3,"PossessionHand");
		Stop;
	PossessionHand:
		CYOH J 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH J 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH J 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH J 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH J 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH J 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH J 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),-49,173);
		"####" "#" 1 A_OverlayOffset(OverlayID(),-21,114,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),14,76,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),35,67,WOF_INTERPOLATE);
		"####" "#" 6 A_OverlayOffset(OverlayID(),37,67,WOF_INTERPOLATE);
		CYOH K 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH K 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH K 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH K 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH K 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH K 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH K 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),99,120);
		"####" "#" 1 A_OverlayOffset(OverlayID(),104,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),106,127,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),103,124,WOF_INTERPOLATE);
		CYOH F 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH F 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH F 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH F 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH F 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH F 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH F 0;
		"####" "#" 0 A_OverlayFlags(OverlayID(),PSPF_FLIP,1);
		"####" "#" 1 A_OverlayOffset(OverlayID(),59,98,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),44,103,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),31,112,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),14,132,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),6,153,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),19,173,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),32,190,WOF_INTERPOLATE);
		"####" "#" 0 A_Overlay(-4,"UnderHand2");
		Stop;
	UnderHand2:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 0 A_OverlayFlags(OverlayID(),PSPF_FLIP,0);
		"####" "#" 1 A_OverlayOffset(OverlayID(),39,184);
		"####" "#" 1 A_OverlayOffset(OverlayID(),44,172,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),57,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),77,132,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),92,121,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),106,119,WOF_INTERPOLATE);
		IROG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		IRDG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		IRTG A 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		IRCG A 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		IRUG A 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		IRYG A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		IRNG A 0;
		"####" "#" 6 A_OverlayOffset(OverlayID(),0,0);
		Stop;
	GunzerkPossession:
		TNT1 A 1 {
			A_SetBlend("Black",1.0,25);
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(8, 8, 8, 15, 0, 64, "none", QF_SCALEDOWN); }
			A_FireProjectile("FloatingIronblast",0,0,0,0);
			A_GiveInventory("IronblastStratActive");
			A_TakeInventory("Ironblast");
		}
		Stop;
	HandDown:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(-4,85,106);
		"####" "#" 1 A_OverlayOffset(-4,82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-4,78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-4,69,176,WOF_INTERPOLATE);
		Stop;
	HandUp:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(-4,69,176);
		"####" "#" 1 A_OverlayOffset(-4,78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-4,82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-4,90,106,WOF_INTERPOLATE);
		Stop;
	Achtung:
		"####" A 25 {
			A_PlaySound("Menu/Change",6);
			A_Print("\c[white]You can't control more than one possessed ''Ironblast'' (and its gunzerked clone) at a time!");
		}
		Goto RightActive;
		
	//RIGHT SIDE
	
	RightActive:
		2RNG A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),9);
		ERNG A 0 A_JumpIf(invoker.LeftHand,8);
		IROG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		IRDG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		IRTG A 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		IRCG A 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		IRUG A 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		IRYG A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		IRNG A 0;
		"####" "#" 1;
        "####" "#" 0 {
			
			// Prevent jittering animation -Dino
			if(invoker.GC_DeadCharging) { 
				A_Overlay(-5,"CastUnhand"); 
				Return ResolveState("DeadChargeAnimationOverride");
			}
			
			//Strat switch.
			If(CountInv("IronblastStrat") &&
				!invoker.weapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				GetPlayerInput(INPUT_BUTTONS) & BT_RELOAD) {
				Return ResolveState("ShotgunPossession");
			}
			
			//Fire.
			If(!(GC_Gunslinger || CountInv("PowerGunzerking")) &&
				!invoker.weapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) {
				Return ResolveState("MainFire");
			}
			
			//Gunzerk fire.
			If((GC_Gunslinger || CountInv("PowerGunzerking")) &&
				!invoker.WeapSwitch && !CountInv("GCCantFire") &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) {
				Return ResolveState("MainFire");
			}
			Return ResolveState(Null);
		}
		Loop;
	
	//Yes, I condensed all standard firing into one state.
	//Now if I only got an idea how to do that BEFORE I wrote previous two guns...
	//I am not going back to refactor them. No. At least until I'll get hit
	//with that genius (horrible) idea again.
	
	MainFire:
		"####" A 0 {
			if((OverlayID() == -3 && CountInv("IronblastMag") >= 3) ||
			   (OverlayID() == 3 && CountInv("IronblastMag2") >= 3))
			 {
				Return ResolveState("GoingForPump");
			}
			Return ResolveState(Null);
		}
		"####" A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),2);
		"####" A 0 A_CheckReload;
		"####" A 0 A_JumpIf(OverlayID() == 3,3);
		"####" A 0 A_JumpIfNoAmmo("RightActive");
		"####" A 0 A_Jump(256,2);
		"####" A 0 A_JumpIfNoAmmo("LeftActive");
		"####" "#" 0 {
			invoker.WeapAction++;
			
			if(OverlayID() == -3) {
				A_TakeInventory("SupermagTimer",0);
				A_Overlay(-4,"Recoil");
				if(CountInv("SupermagJohnson")) { A_GiveInventory("IronblastMag",1); }
				if(GC_Gunslinger || CountInv("PowerGunzerking")) {
					invoker.GunzerkShot = 1;
				} else {
					invoker.GunzerkShot = 0;
					invoker.LeftHand = 1;
				}
			}
			
			if(OverlayID() == 3) {
				A_TakeInventory("SupermagTimer2",0);
				A_Overlay(4,"Recoil");
				if(CountInv("SupermagJohnson")) { A_GiveInventory("IronblastMag2",1); }
				A_OverlayFlags(3,PSPF_MIRROR|PSPF_FLIP,1);
				if(GC_Gunslinger || CountInv("PowerGunzerking")) {
					invoker.GunzerkShot2 = 1;
				}
			}
			
			A_PlaySound("Ironblast/Fire",1,0.5);
			A_PlaySound("Ironblast/Add",5,0.5);
			A_SetBlend("Yellow",0.2,15);
			
			/*
			// kd: Experimental replacement with railguns (now that limits are a thing) to reduce
			// crazy Ironblast overhead that no other weapon has (anymore).
			let hor_offset1 = frandom(8, 12);	// First group of pipes
			let hor_offset2 = frandom(4, 8);	// Second pipe group
			
			// Left side fire:
			if(OverlayId() != -3) {
				hor_offset1 = -hor_offset1;
				hor_offset2 = -hor_offset2;
			}
			
			// kd: Fire one straight ahead.
			A_RailAttack(
				int(random(32, 48)),
				spawnofs_xy:	hor_offset1,
				useammo:		true,
				color1:			"",
				color2:			"",
				flags:			RGF_SILENT | RGF_NORANDOMPUFFZ | RGF_EXPLICITANGLE,
				pufftype:		"IronblastImpact",
				limit:			6); // kd: up from 3 cuz fastprojectiles can shred groups better
			
			let hor_offset	= hor_offset1;
			
			for(let i = 0; i < 22; i++) {
				A_RailAttack(
					int(random(32, 48)),
					spawnofs_xy:	hor_offset1,
					useammo:		false,
					color1:			"",
					color2:			"",
					flags:			RGF_SILENT | RGF_NORANDOMPUFFZ | RGF_EXPLICITANGLE,
					pufftype:		"IronblastImpact",
					spread_xy:		frandom(-8.5, 8.5),
					spread_z:		frandom(-3, 3),
					spawnofs_z:		frandom(1, 5),
					limit:			6);
				
				if(i == 11) {
					hor_offset = hor_offset2;
				}
			}*/
			
			A_FireProjectile("IronblastProjectile",0,1,6 * (OverlayID() == -3 ? 1.0 : -1.0),0);
			for(invoker.Loopler = 0; invoker.Loopler <= 10; invoker.Loopler++)
            {
                A_FireProjectile("IronblastProjectile",frandom(8.5,-8.5),0,6 * (OverlayID() == -3 ? 1.0 : -1.0) + frandom(2.0,-2.0),4 + frandom(3.0,-3.0),FPF_AIMATANGLE,frandom(3.0,-3.0));
            }
			for(invoker.Loopler = 0; invoker.Loopler <= 9; invoker.Loopler++)
            {
               A_FireProjectile("IronblastProjectile",frandom(8.5,-8.5),0,10 * (OverlayID() == -3 ? 1.0 : -1.0) + frandom(2.0,-2.0),4 + frandom(3.0,-3.0),FPF_AIMATANGLE,frandom(3.0,-3.0));
            }
			
			for(invoker.Loopler = 0; invoker.Loopler <= 10; invoker.Loopler++)
            {
                A_FireProjectile("Gunsmoke_Ironblast",frandom(24.0,-24.0),0,(OverlayID() == -3 ? 8.0 : -8.0) + (OverlayID() == -3 ? 3.0 : -3.0) * 0.15 ,4.0 + frandom(3.0,-3.0),FPF_NOAUTOAIM,frandom(8.0,-8.0));
			}
			
			//A_Recoil(10);
			A_ChangeVelocity (Cos(Pitch) * -32
				* (CountInv("PowerDeadmaker") ? 0.1 : 1.0) //Deadmaker modifier.
				* (CountInv("PowerSuitToken") ? 0.1 : 1.0) //Powersuit modifier.
				* GetCvar("GC_PhysicalRecoil"), 		 	 //Recoil nullifier.
				0,		//Nobody likes you, Y velocity.
				Sin(Pitch) * 32
				* (CountInv("PowerDeadmaker") ? 0.1 : 1.0)
				* (CountInv("PowerSuitToken") ? 0.1 : 1.0)
				* GetCvar("GC_PhysicalRecoil"), CVF_RELATIVE);
			A_AlertMonsters();
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(5, 5, 5, 25, 0, 24, "none", QF_SCALEDOWN); }
		}
		2RNG A 0 A_JumpIf(invoker.GunzerkShot || invoker.GunzerkShot2,8);
		IROG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		IRDG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		IRTG A 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		IRCG A 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		IRUG A 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		IRYG A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		IRNG A 0;
		"####" B 1 Bright A_OverlayOffset(OverlayID(),1,1,WOF_INTERPOLATE);
		"####" C 1 Bright A_OverlayOffset(OverlayID(),3,3,WOF_INTERPOLATE);
		"####" D 1 Bright A_OverlayOffset(OverlayID(),6,6,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),15,10,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),24,7,WOF_INTERPOLATE);
		"####" F 1 A_OverlayOffset(OverlayID(),40,3,WOF_INTERPOLATE);
		"####" F 1 A_OverlayOffset(OverlayID(),57,1,WOF_INTERPOLATE);
		"####" G 1 A_OverlayOffset(OverlayID(),68,0,WOF_INTERPOLATE);
		"####" G 1 A_OverlayOffset(OverlayID(),79,2,WOF_INTERPOLATE);
		"####" G 1 A_OverlayOffset(OverlayID(),84,7,WOF_INTERPOLATE);
		"####" G 1 A_OverlayOffset(OverlayID(),89,16,WOF_INTERPOLATE);
		"####" A 0 { if(!CountInv("MastersOfPain")) { A_Overlay(666,"OneStationEarly"); } }
		"####" G 1 A_OverlayOffset(OverlayID(),91,24,WOF_INTERPOLATE);
		"####" G 1 A_OverlayOffset(OverlayID(),87,33,WOF_INTERPOLATE);
		/*"####" G 0 {
			if(CountInv("SupermagJohnson")) {
				if(OverlayID() == -3 && CountInv("IronblastMag") < 3)
				{
					//for(int BavarianHunchback = 0; BavarianHunchback < 8; BavarianHunchback++);
					//{
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18); //Laziness. Also for some reason for loop didn't want to do what I wanted.
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
					//}

				}
				if(OverlayID() == 3 && CountInv("IronblastMag2") < 3)
				{
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
					A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
				}
			}
		}*/
		"####" F 1 A_OverlayOffset(OverlayID(),80,37,WOF_INTERPOLATE);
		"####" F 1 A_OverlayOffset(OverlayID(),68,42,WOF_INTERPOLATE);
		"####" F 1 A_OverlayOffset(OverlayID(),56,44,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),46,43,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),33,40,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),23,32,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),14,25,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),10,19,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),7,14,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),3,5,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),1,2,WOF_INTERPOLATE);
		"####" A 0 {
			if(CountInv("SupermagJohnson")) {
				A_OverlayOffset(OverlayID(),0,0,WOF_INTERPOLATE);
				if(OverlayID() == 3 && CountInv("IronblastMag2") && CountInv("IronblastMag2") < invoker.owner.FindInventory("IronblastMag2").MaxAmount) 	  { invoker.WeapAction--; invoker.LeftHand = 0; Return ResolveState("LeftActive"); }
				else if( OverlayID() == -3 && CountInv("IronblastMag") && CountInv("IronblastMag") < invoker.owner.FindInventory("IronblastMag").MaxAmount) { invoker.WeapAction--; invoker.LeftHand = 0; Return ResolveState("RightActive"); }
			}
			Return ResolveState(Null);
		}
		Goto GoingForPump;
	OneStationEarly:
		TNT1 AAAAAAAAAAAAAAA 1 A_WeaponReady(WRF_NOFIRE);
		Stop;
	GoingForPump:
		"####" A 0 A_JumpIf(!(invoker.GunzerkShot || invoker.GunzerkShot2),8);
		2ROG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		2RDG A 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		2RTG A 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		2RCG A 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		2RUG A 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		2RYG A 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		2RNG A 0;
		"####" H 1 A_OverlayOffset(OverlayID(),3,2,WOF_INTERPOLATE);
		"####" H 1 A_OverlayOffset(OverlayID(),8,4,WOF_INTERPOLATE);
		"####" I 1 A_OverlayOffset(OverlayID(),13,9,WOF_INTERPOLATE);
		"####" I 1 A_OverlayOffset(OverlayID(),22,15,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),18,35);
		"####" J 1 A_OverlayOffset(OverlayID(),25,30,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),34,24,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),42,17,WOF_INTERPOLATE);
		"####" K 1 A_OverlayOffset(OverlayID(),22,23);
		"####" K 1 A_OverlayOffset(OverlayID(),29,20,WOF_INTERPOLATE);
		"####" K 1 A_OverlayOffset(OverlayID(),38,18,WOF_INTERPOLATE);
		"####" L 1 A_OverlayOffset(OverlayID(),23,16);
	Pump:
		"####" A 0 A_PlaySound("Ironblast/Pump/In",6,0.6);
		"####" L 1 { A_OverlayOffset(OverlayID(),28,22,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" L 1 { A_OverlayOffset(OverlayID(),30,30,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" M 1 { A_OverlayOffset(OverlayID(),32,35,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" M 1 { A_OverlayOffset(OverlayID(),33,48,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" M 1 { A_OverlayOffset(OverlayID(),34,60,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" N 1 { A_OverlayOffset(OverlayID(),35,67,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" N 1 { A_OverlayOffset(OverlayID(),36,74,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" N 1 { A_OverlayOffset(OverlayID(),37,79,WOF_INTERPOLATE); A_SetPitch(Pitch+1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
	ShellsGoingOut:
		"####" NNNN 1 {
			if(OverlayID() == -3)
			{
				A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
				A_FireProjectile("ShottyCasingSpawner",0,0,30,-18);
			}
			if(OverlayID() == 3)
			{
				A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
				A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-30,-18);
			}
		}
		"####" N 1 {
			if(CountInv("SupermagJohnson")) {
				if(OverlayID() == 3 && CountInv("IronblastMag2")) { A_TakeInventory("IronblastMag2",1); Return ResolveState("ShellsGoingOut"); }
				else if(OverlayID() == -3 && CountInv("IronblastMag")) { A_TakeInventory("IronblastMag",1);  Return ResolveState("ShellsGoingOut"); }
			}
			Return ResolveState(Null);
		}
	PumpBack:
		"####" A 0 A_PlaySound("Ironblast/Pump/Out",6,0.6);
		"####" N 1 { A_OverlayOffset(OverlayID(),37,79,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" N 1 { A_OverlayOffset(OverlayID(),36,74,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" N 1 { A_OverlayOffset(OverlayID(),35,67,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" M 1 { A_OverlayOffset(OverlayID(),34,60,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" M 1 { A_OverlayOffset(OverlayID(),33,48,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" M 1 { A_OverlayOffset(OverlayID(),32,35,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" L 1 { A_OverlayOffset(OverlayID(),30,30,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
		"####" L 1 { A_OverlayOffset(OverlayID(),28,22,WOF_INTERPOLATE); A_SetPitch(Pitch-1.0 * invoker.GMod * GetCvar("GC_WeaponRecoil"), SPF_INTERPOLATE); }
	GoingForActive:
		"####" L 1 A_OverlayOffset(OverlayID(),23,16,WOF_INTERPOLATE);
		"####" K 1 A_OverlayOffset(OverlayID(),38,18);
		"####" K 1 A_OverlayOffset(OverlayID(),29,20,WOF_INTERPOLATE);
		"####" K 1 A_OverlayOffset(OverlayID(),22,23,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),42,17);
		"####" J 1 A_OverlayOffset(OverlayID(),34,24,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),25,30,WOF_INTERPOLATE);
		"####" J 1 A_OverlayOffset(OverlayID(),18,35,WOF_INTERPOLATE);
		"####" I 1 A_OverlayOffset(OverlayID(),22,15);
		"####" I 1 A_OverlayOffset(OverlayID(),13,9,WOF_INTERPOLATE);
		"####" H 1 A_OverlayOffset(OverlayID(),8,4,WOF_INTERPOLATE);
		"####" H 1 A_OverlayOffset(OverlayID(),3,2,WOF_INTERPOLATE);
		"####" A 0 A_JumpIf(!(invoker.GunzerkShot || invoker.GunzerkShot2),2);
		2RNG A 0;
		"####" A 1 A_OverlayOffset(OverlayID(),1,2,WOF_INTERPOLATE);
		"####" A 0 A_OverlayOffset(OverlayID(),0,0,WOF_INTERPOLATE);
		"####" A 0 {
			invoker.WeapAction--;
			invoker.LeftHand = 0;
			If(OverlayID() == -3 && (GC_Gunslinger || CountInv("PowerGunzerking"))) { invoker.GunzerkShot = 0; }
			else 				 															  { invoker.GunzerkShot2 = 0; }
		}
		"####" A 0 A_JumpIf(OverlayID() == 3,"LeftActive");
		Goto RightActive;
	Recoil: //Sadly this can't be flipped without everything else flipping out.
		TNT1 A 1 {
			invoker.GMod = GC_Gunslinger || CountInv("PowerGunzerking") ? 0.5 : 1.0;
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch - 0.75 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.75 : -0.75), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch - 1.0 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 1.5 : -1.5), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetPitch(pitch - 1.0 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 2.0 : -2.0), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.9); }
			A_SetPitch(pitch - 1.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 1.5 : -1.5), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.8); }
			A_SetPitch(pitch - 0.75 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.75 : -0.75), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.75); }
			A_SetPitch(pitch - 0.65 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.65 : -0.65), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.725); }
			A_SetPitch(pitch - 0.45 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.45 : -0.45), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.71); }
			A_SetPitch(pitch - 0.35 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.35 : -0.35), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.73); }
			A_SetPitch(pitch - 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.25 : -0.25), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.8); }
			A_SetPitch(pitch - 0.15 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.15 : -0.15), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.82); }
			A_SetPitch(pitch + 0.15 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.15 : -0.15), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.83); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.25 : -0.25), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.85); }
			A_SetPitch(pitch + 0.15 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? 0.15 : -0.15), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.87); }
			A_SetPitch(pitch + 0.35 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.89); }
			A_SetPitch(pitch + 0.35 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.15 : 0.15), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.92); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.25 : 0.25), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.94); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.35 : 0.35), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.45 : 0.45), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.35 : 0.35), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.25 : 0.25), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch + 0.35 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.25 : 0.25), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch + 0.25 * GetCvar("GC_WeaponRecoil") * invoker.Gmod, SPF_INTERPOLATE);
			A_SetAngle(angle + GetCVar("GC_WeaponRecoil") * invoker.GMod * (OverlayID() == 4 ? -0.15 : 0.15), SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(1.0); }
		}
		Stop;
		
	//LEFT SIDE.
			
	LeftActive:
		TNT1 A 0 {
			if(GC_Gunslinger || CountInv("PowerGunzerking")) {
				A_OverlayFlags(3,PSPF_MIRROR|PSPF_FLIP,1);
			} else {
				A_OverlayFlags(3,PSPF_MIRROR|PSPF_FLIP,0);
			}
		}
		TNT1 A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),3);
		TNT1 A 1;
		TNT1 A 0 {
			If(!invoker.WeapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				!(GC_Gunslinger || CountInv("PowerGunzerking")) &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) {
					Return ResolveState("HandCast");
			}
			If(!invoker.WeapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				!(GC_Gunslinger || CountInv("PowerGunzerking")) && GetCvar("GC_Trogdor") &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ZOOM) {
					Return ResolveState("DeadPunchEnter");
				}
			Return ResolveState(Null);
		}
		Loop;
		2RNG A 1;
		2RNG A 0 A_JumpIf(!invoker.WeapSwitch && !CountInv("GCCantFire") &&
						  GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "MainFire");
        Loop;
		
	//CAST.
		
	CastHandLaunch:
		"####" "#" 0 A_Overlay(-5,"CastUnhand");
		TNT1 A 4 { invoker.LeftHand = 1; }
		Goto CastLaunch+3;
	CastUnhand:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(-5,85,106);
		"####" "#" 1 A_OverlayOffset(-5,82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-5,78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-5,69,176,WOF_INTERPOLATE);
		Stop; //This part is important.
	CastHandEnd:
		"####" "#" 0 A_Overlay(-5,"CastUphand");
		TNT1 A 4 A_OverlayOffset(3,0,0);
		Goto LeftActive;
	CastUphand:
		"####" "#" 0 { invoker.LeftHand = 1; }
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(-5,69,176);
		"####" "#" 1 A_OverlayOffset(-5,78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-5,82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(-5,90,106,WOF_INTERPOLATE);
		"####" "#" 0 { invoker.LeftHand = 0; }
		Stop;
	
	//DEADMAKER PUNCH.
	
	DeadPunchEnter:
		TNT1 A 7 { invoker.LeftHand = 1; A_Overlay(-5,"DeadPunchEnterAnim"); }
		Goto DeadPunchStart;
	DeadPunchEnterAnim:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),3);
		CYDH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYNH D 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),85,106);
		"####" "#" 1 A_OverlayOffset(OverlayID(),82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),69,176,WOF_INTERPOLATE);
		Stop;
	DeadPunchExit:
		TNT1 A 4 { invoker.LeftHand = 1; A_Overlay(-5,"DeadPunchExitAnim"); }
		Goto LeftActive;
	DeadPunchExitAnim:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),3);
		CYDH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYNH D 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),69,176);
		"####" "#" 1 A_OverlayOffset(OverlayID(),78,151,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),82,125,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),90,106,WOF_INTERPOLATE);
		"####" "#" 0 { invoker.LeftHand = 0; }
		Stop;
	
	// Dino's dummy animation
	DeadChargeAnimationOverride:
		ERNG A 1 {
			if(!invoker.weapSwitch) { 
				A_Overlay(-5,"CastUphand");
				Return ResolveState("RightActive"); 
			}
			Return ResolveState(null);
		}
		Loop;
	}
}

#endregion
