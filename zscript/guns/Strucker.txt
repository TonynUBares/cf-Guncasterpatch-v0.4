#region Gnus
//$color 14

/*
fun fact: Strucker went through five transformations so far. at the very
beginning it was a single shot pump action. Then a double-barreled pump action.
Then it was turned into double-barreled auto. As a final instance,
it was settled on as over-under double-barreled auto shotgun.
*/
class StruckerSelected : Inventory { Default { Inventory.MaxAmount 1; } }

//Hexen version.
class StruckerHexen : RandomSpawner replaces FWeapAxe
{
	Default
	{
		DropItem "Strucker";
	}
}

//Heretic version.
class StruckerHeretic : RandomSpawner replaces Crossbow
{
	Default
	{
		DropItem "Strucker";
	}
}

class Strucker : GuncasterWeapon 
{
    Default
    {
		Inventory.PickupMessage "$GOTSTRUCKER";
		Obituary "$KILLSTRUCKER";
		Weapon.UpSound "Strucker/Up";
		Weapon.SelectionOrder 2;
		Weapon.AmmoGive 6;
		Weapon.AmmoType "ShotgunAmmo";
		Weapon.AmmoUse 1;
		Weapon.SlotNumber 3;
		Weapon.BobStyle 'InverseSmooth';
		Weapon.BobSpeed 1.8;
		Weapon.BobRangeY 0.4;
		Weapon.BobRangeX 0.9;
		GuncasterWeapon.twoHandedWeapon TRUE;
		Scale 1.0;
	}
	
	Class<Actor> HBulletPuffClass;
	Class<Actor> DrillSlugPuffClass;
	
	//Strat drop.
	override void PostBeginPlay()
	{
		if(!bDROPPED && random(0,20) == 0)
		{
			A_DropItem("StruckerStratGiver",-1,256);
		}
		
		if(deathmatch)
		{
			HBulletPuffClass = "HBulletPuffDM";
			DrillSlugPuffClass = "DrillSlugPuffDM";
		}
		else
		{
			HBulletPuffClass = "HBulletPuff";
			DrillSlugPuffClass = "DrillSlugPuff";
		}
		
		Super.PostBeginPlay();
		Return;
	}
	
	//Hexen handling.
	override Void AttachToOwner (actor user) {
		if(gameinfo.gametype == Game_HEXEN) {
			AmmoGive1 = 30;
			AmmoType1 = "BlueMana";
			AmmoUse1 = 1;
		}
		Super.AttachToOwner(user);
	}
	
	double GunzX; //A lil' positioning modifier when the gunzerk is on.
	double GunzY;
	
	States
	{
	Spawn:
		STRG X -1;
		Stop;
		
	Select:
		TNT1 A 0 A_Overlay(-4,"RightActive2"); //Hand.
		Goto Super::Select;

	SelectStuff:
		TNT1 A 0 {
			A_GiveInventory("StruckerSelected",1);
			A_SetCrosshair(54);
			ACS_NamedExecuteAlways("SbarinfoFix",0,0,1,2);
		}
		Goto SelectLoop;
		
	DeselectStuff:
		TNT1 A 0 {
			A_TakeInventory("StruckerSelected",1);
			ACS_NamedExecuteAlways("SbarinfoFix",0,1,1,2);
		}
		Goto DeselectLoop;

	//STRAT
	
	StratSwitch:
		"####" "#" 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),"StratSwitchGunzerk");
		"####" "#" 0 {
			A_Overlay(-4,"Unhand");
			A_Overlay(3,"GeorgeFistbang");
		}
		Goto ShotgunMove;
	Unhand:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),97,120);
		"####" "#" 1 A_OverlayOffset(OverlayID(),90,131,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),81,153,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),77,165,WOF_INTERPOLATE);
		"####" "#" 0 A_Overlay(3,"GeorgeFistbang");
		Stop;
		
	GeorgeFistbang:
		TNT1 A 0 A_OverlayFlags(3,PSPF_FLIP|PSPF_MIRROR,1);
		TNT1 A 4;
		C1OP B 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		C1DP B 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		C1NP B 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		C1CP B 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		C1UP B 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		C1YP B 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		C1GP B 0;
		"####" B 1 A_OverlayOffset(OverlayID(),229,169);
		"####" B 1 A_OverlayOffset(OverlayID(),210,132,WOF_INTERPOLATE);
		"####" B 1 A_OverlayOffset(OverlayID(),193,98,WOF_INTERPOLATE);
		"####" C 1 A_OverlayOffset(OverlayID(),184,74,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),180,70,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),152,72,WOF_INTERPOLATE);
		"####" E 1 A_OverlayOffset(OverlayID(),146,72,WOF_INTERPOLATE);
		"####" E 1 {
			A_OverlayOffset(OverlayID(),100,107,WOF_INTERPOLATE);
			A_PlaySound("Punch/Hit",5,0.7);
			A_PlaySound("Strucker/Load",6,0.8);
		}
		"####" A 1 A_OverlayOffset(OverlayID(),100,120,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),100,120,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),107,124,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),126,132,WOF_INTERPOLATE);
	StratHanding:
		"####" A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
		CYOH F 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH F 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH F 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH F 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH F 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH F 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH F 0;
		"####" F 1 A_OverlayOffset(OverlayID(),147,122);
		"####" F 1 A_OverlayOffset(OverlayID(),161,118,WOF_INTERPOLATE);
		"####" F 0 A_Overlay(-4,"StratHanding2");
		TNT1 A 3;
		Goto LeftActive;
	StratHanding2:
		"####" A 0 A_OverlayOffset(OverlayID(),161,118);
		"####" A 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
		CYOH F 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH F 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH F 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH F 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH F 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH F 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH F 0;
		"####" F 1 A_OverlayOffset(OverlayID(),138,115,WOF_INTERPOLATE);
		"####" F 1 A_OverlayOffset(OverlayID(),119,112,WOF_INTERPOLATE);
		"####" F 1 A_OverlayOffset(OverlayID(),99,115,WOF_INTERPOLATE);
		"####" F 0 A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,0);
		Goto RightActive2;
		
	ShotgunMove:
		"####" A 14;
		"####" A 1 A_OverlayOffset(OverlayID(),5,4,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),10,10,WOF_INTERPOLATE);
		"####" A 0 A_JumpIf(CountInv("StruckerStratActive"),3);
		STSG A 0 A_GiveInventory("StruckerStratActive",1);
		"####" A 0 A_Jump(256,2);
		STRG A 0 A_TakeInventory("StruckerStratActive",1);
	ShotgunStratted:
		"####" A 1 A_OverlayOffset(OverlayID(),11,11,WOF_INTERPOLATE);
		"####" A 1 A_OverlayOffset(OverlayID(),10,12,WOF_INTERPOLATE);
		"####" B 1 A_OverlayOffset(OverlayID(),9,12,WOF_INTERPOLATE);
		"####" B 1 A_OverlayOffset(OverlayID(),6,11,WOF_INTERPOLATE);
		"####" C 1 A_OverlayOffset(OverlayID(),4,9,WOF_INTERPOLATE);
		"####" C 1 A_OverlayOffset(OverlayID(),3,7,WOF_INTERPOLATE);
		"####" D 1 A_OverlayOffset(OverlayID(),2,4,WOF_INTERPOLATE);
		"####" D 1 A_OverlayOffset(OverlayID(),1,2,WOF_INTERPOLATE);
		"####" A 0 A_OverlayOffset(OverlayID(),0,0,WOF_INTERPOLATE);
		Goto RightActive;
		
	StratSwitchGunzerk:
		STRG A 0 A_JumpIf(CountInv("StruckerStratActive"),"StratSwitchGunzerkOff");
		STRG A 0 {
			invoker.LeftHand = 1;
			A_PlaySound("Strucker/Load",6,0.8);
			A_Overlay(3,"LeftStratSwitch");
		}
		STRG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),3+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),6+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),10+invoker.GunzX,5+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),12+invoker.GunzX,8+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,13+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),15+invoker.GunzX,15+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		
		STSG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,10+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),9+invoker.GunzX,6+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),4+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),2+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 0 {
			A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY,WOF_INTERPOLATE);
			invoker.LeftHand = 0;
			A_GiveInventory("StruckerStratActive",1);
		}
		Goto RightActive;
	LeftStratSwitch:
		STRG A 0 {
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
			A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY);
		}
		STRG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),3+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),6+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),10+invoker.GunzX,5+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),12+invoker.GunzX,8+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,13+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),15+invoker.GunzX,15+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		
		STSG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,10+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),9+invoker.GunzX,6+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),4+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),2+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 0 A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY,WOF_INTERPOLATE);
		Goto LeftActive;
		
	StratSwitchGunzerkOff:
		STSG A 0 {
			invoker.LeftHand = 1;
			A_PlaySound("Strucker/Load",6,0.8);
			A_Overlay(3,"LeftStratSwitchOff");
		}
		STSG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),3+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),6+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),10+invoker.GunzX,5+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),12+invoker.GunzX,8+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,13+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),15+invoker.GunzX,15+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		
		STRG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,10+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),9+invoker.GunzX,6+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),4+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),2+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 0 {
			A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY,WOF_INTERPOLATE);
			invoker.LeftHand = 0;
			A_TakeInventory("StruckerStratActive",1);
		}
		Goto RightActive;
	LeftStratSwitchOff:
		STSG A 0 {
			A_OverlayFlags(OverlayID(),PSPF_FLIP|PSPF_MIRROR,1);
			A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY);
		}
		STSG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),3+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),6+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),10+invoker.GunzX,5+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),12+invoker.GunzX,8+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,13+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),15+invoker.GunzX,15+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),14+invoker.GunzX,14+invoker.GunzY,WOF_INTERPOLATE);
		
		STRG A 1 A_OverlayOffset(OverlayID(),13+invoker.GunzX,10+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),9+invoker.GunzX,6+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),4+invoker.GunzX,3+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),2+invoker.GunzX,2+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 1 A_OverlayOffset(OverlayID(),1+invoker.GunzX,1+invoker.GunzY,WOF_INTERPOLATE);
		STRG A 0 A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY,WOF_INTERPOLATE);
		Goto LeftActive;
		
	//RIGHT SIDE
	
	RightActive:
		"####" "#" 0 {
			if(GC_Gunslinger || CountInv("PowerGunzerking")) {
				invoker.GunzX = 25;
				invoker.GunzY = 10;
			} else {
				//if(!invoker.LeftHand) { A_Overlay(-4,"RightActive2"); }
				invoker.GunzX = 0;
				invoker.GunzY = 0;
			}
			
			// Prevent jittering animation -Dino
			if(invoker.GC_DeadCharging) { 
				if(invoker.weapSwitch != 1) { invoker.weapSwitch = 1; }
				A_Overlay(-4,"CastUnhand");
				Return ResolveState("DeadChargeAnimationOverride"); 
			}
			A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY);
			Return ResolveState(null);
		}
		STSG A 0 A_JumpIf(CountInv("StruckerStratActive"),2);
		STRG A 0;
		"####" "#" 1; //You WANT this delay here or else when you run out of ammo - ker-crash due to infinite loop~
        "####" "#" 0 {
			//Strat switch.
			If(CountInv("StruckerStrat") &&
				!invoker.weapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				GetPlayerInput(INPUT_BUTTONS) & BT_RELOAD) {
				Return ResolveState("StratSwitch");
			}
			
			//Fire.
			If(!(GC_Gunslinger || CountInv("PowerGunzerking")) &&
				!invoker.weapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK) {
				Return ResolveState("RightFire");
			}
			
			//Gunzerk fire.
			If((GC_Gunslinger || CountInv("PowerGunzerking")) &&
				!invoker.WeapSwitch && !CountInv("GCCantFire") &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) {
				Return ResolveState("RightFire");
			}
			Return ResolveState(Null);
		}
		Loop;
		
	RightActive2:
		TNT1 A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),8);
		CYOH E 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH E 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH E 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH E 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH E 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH E 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH E 0;
		"####" "#" 1 A_OverlayOffset(-4,0,0);
		Loop;
		
	RightFire:
		"####" A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),2);
		"####" A 0 A_CheckReload;
		"####" A 0 A_JumpIfNoAmmo("RightActive");
		"####" A 0 A_JumpIf(CountInv("StruckerStratActive"),"RightStratFire");
		STRG O 1 Bright {
			invoker.WeapAction++;
			A_OverlayOffset(OverlayID(),1 + invoker.GunzX,1 + invoker.GunzY,WOF_INTERPOLATE);
			A_Overlay(-4,"RightFire2");
			A_Overlay(-5,"RightRecoil");
			
			A_FireBullets(2,0.4,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM); //A_FireBullets(4,0.8,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			for(invoker.Loopler = 0; invoker.Loopler <= 3; invoker.Loopler++)
            {
                A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,2.0 + (invoker.GunzX * 0.15) ,5.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
			}
			A_PlaySound("Strucker/Load",6,0.5);
			A_PlaySound("Strucker/AltFire",5,0.5);
			A_AlertMonsters();
			
		}
		STRG H 1 {
			A_OverlayOffset(OverlayID(),5 + invoker.GunzX,8 + invoker.GunzY,WOF_INTERPOLATE);
			A_FireProjectile("ShottyCasingSpawner",0,0,20 + (invoker.GunzX*0.5),-12 - (invoker.GunzY * 0.5),FPF_NOAUTOAIM);
		}
		STRG J 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX, 	5 + invoker.GunzY,WOF_INTERPOLATE);
		STRG M 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX, 3 + invoker.GunzY,WOF_INTERPOLATE);
		STRG N 1 Bright {
			A_OverlayOffset(OverlayID(),1 + invoker.GunzX,1 + invoker.GunzY,WOF_INTERPOLATE);
			A_FireBullets(2,0.4,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM); //A_FireBullets(4,0.8,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			for(invoker.Loopler = 0; invoker.Loopler <= 3; invoker.Loopler++)
            {
				A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,2.0 + (invoker.GunzX * 0.15) ,0.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
			}
			A_PlaySound("Strucker/AltFire",1,0.5);
			A_AlertMonsters();
			
		}
		STRG H 1 {
			A_FireProjectile("ShottyCasingSpawner",0,0,20 + (invoker.GunzX*0.5),-12 - (invoker.GunzY * 0.5),FPF_NOAUTOAIM);
			A_OverlayOffset(OverlayID(),5 + invoker.GunzX,8 + invoker.GunzY,WOF_INTERPOLATE);
		}
		STRG J 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX,5 + invoker.GunzY,WOF_INTERPOLATE);
		STRG M 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX,3 + invoker.GunzY,WOF_INTERPOLATE);
		STRG A 0 { invoker.WeapAction--; }
		Goto RightActive;
	RightFire2:
		TNT1 A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),8);
		CYOH E 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH E 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH E 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH E 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH E 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH E 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH E 0;
		"####" "#" 1 Bright A_OverlayOffset(OverlayID(),1 + invoker.GunzX, 1 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),4 + invoker.GunzX, 6 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX, 3 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),0 + invoker.GunzX, 0 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 Bright A_OverlayOffset(OverlayID(),1 + invoker.GunzX, 1 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),4 + invoker.GunzX, 6 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX, 3 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX, 1 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 0 A_OverlayOffset(OverlayID(),invoker.GunzX, invoker.GunzY,WOF_INTERPOLATE);
		Goto RightActive2;
	RightRecoil:
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(1, 1, 1, 8, 0, 24, "none", QF_SCALEDOWN); }
			A_SetPitch(pitch-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.995); }
			/*A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);*/
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.995); }
			/*A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);*/
		}
		TNT1 A 0 A_ZoomFactor(1.0);
		Stop;
	RightStratFire:
		STSG F 1 Bright {
			invoker.WeapAction++;
			A_OverlayOffset(OverlayID(),1 + invoker.GunzX,2 + invoker.GunzY,WOF_INTERPOLATE);
			A_Overlay(-4,"RightStratFire2");
			A_Overlay(-5,"RightStratRecoil");
			
			A_FireBullets(2,0.4,1,30*frandom(1.0,3.0),invoker.DrillSlugPuffClass,FBF_USEAMMO|FBF_NORANDOM); //A_FireBullets(2,0.4,14,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			A_FireBullets(2,0.4,1,30*frandom(1.0,3.0),invoker.DrillSlugPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			for(invoker.Loopler = 0; invoker.Loopler <= 7; invoker.Loopler++)
            {
                A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,2.0 + (invoker.GunzX * 0.15) ,5.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
				A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,2.0 + (invoker.GunzX * 0.15) ,0.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
			}
			
			A_PlaySound("Strucker/Fire",1,0.6);
			A_PlaySound("Strucker/Add",5,0.4);
			A_AlertMonsters();
			
		}
		STSG G 1 Bright A_OverlayOffset(OverlayID(),2 + invoker.GunzX,6 + invoker.GunzY,WOF_INTERPOLATE);
		STSG H 1 A_OverlayOffset(OverlayID(),8 +  invoker.GunzX, 15 + invoker.GunzY,WOF_INTERPOLATE);
		STSG I 1 A_OverlayOffset(OverlayID(),10 + invoker.GunzX, 22 + invoker.GunzY,WOF_INTERPOLATE);
		STSG J 1 A_OverlayOffset(OverlayID(),12 + invoker.GunzX, 25 + invoker.GunzY,WOF_INTERPOLATE);
		STSG K 1 {
			A_OverlayOffset(OverlayID(),15 + invoker.GunzX,27 + invoker.GunzY,WOF_INTERPOLATE);
			A_PlaySound("Strucker/Load",6,0.5);
			A_FireProjectile("ShottyCasingSpawner",0,0,20 + (invoker.GunzX*0.5),-12 - (invoker.GunzY * 0.5),FPF_NOAUTOAIM);
		}
		STSG L 1 A_OverlayOffset(OverlayID(),17 + invoker.GunzX,29 + invoker.GunzY,WOF_INTERPOLATE);
		STSG M 1 {
			A_OverlayOffset(-3,20 + invoker.GunzX,28 + invoker.GunzY,WOF_INTERPOLATE);
			A_FireProjectile("ShottyCasingSpawner",0,0,20 + (invoker.GunzX*0.5),-12 - (invoker.GunzY * 0.5),FPF_NOAUTOAIM);
		}
		STSG D 1 A_OverlayOffset(OverlayID(),21 + invoker.GunzX, 27 + invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),19 + invoker.GunzX, 24 + invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),14 + invoker.GunzX, 21 + invoker.GunzY,WOF_INTERPOLATE);
		STSG B 1 A_OverlayOffset(OverlayID(),8 + invoker.GunzX,	13 + invoker.GunzY,WOF_INTERPOLATE);
		STSG B 1 A_OverlayOffset(OverlayID(),4 + invoker.GunzX,	7 + invoker.GunzY,WOF_INTERPOLATE);
		STSG C 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX,	5 + invoker.GunzY,WOF_INTERPOLATE);
		STSG C 1 A_OverlayOffset(OverlayID(),2 + invoker.GunzX,	3 + invoker.GunzY,WOF_INTERPOLATE);
		STSG D 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX,	1 + invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),invoker.GunzX, invoker.GunzY,WOF_INTERPOLATE);
		STSG A 0 { invoker.WeapAction--; }
		Goto RightActive;
		
	RightStratFire2:
		TNT1 A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),8);
		CYOH E 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH E 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH E 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH E 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH E 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH E 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH E 0;
		"####" "#" 1 Bright A_OverlayOffset(OverlayID(),1 + invoker.GunzX, 2 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 Bright A_OverlayOffset(OverlayID(),2 + invoker.GunzX, 6 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),8 + invoker.GunzX,	15 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),10 + invoker.GunzX, 22 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),12 + invoker.GunzX, 25 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),15 + invoker.GunzX, 27 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),17 + invoker.GunzX, 29 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),20 + invoker.GunzX, 28 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),21 + invoker.GunzX, 27 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),19 + invoker.GunzX, 24 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),14 + invoker.GunzX, 21 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),8 + invoker.GunzX,	13 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),4 + invoker.GunzX,	7 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX,	5 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),2 + invoker.GunzX,	3 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX,	1 + invoker.GunzY,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),invoker.GunzX, invoker.GunzY,WOF_INTERPOLATE);
		Goto RightActive2;
		
	RightStratRecoil:
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.995); }
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(3, 3, 3, 8, 0, 24, "none", QF_SCALEDOWN); }
			A_SetPitch(pitch-0.75 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.75 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-1.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-1.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch-1.0 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-1.0 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetPitch(pitch-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.955); }
			A_SetPitch(pitch+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(1.0); }
			A_SetPitch(pitch+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		Stop;
		
	//LEFT SIDE.
			
	LeftActive:
		TNT1 A 0 {
			if(GC_Gunslinger || CountInv("PowerGunzerking")) {
				A_OverlayFlags(OverlayID(),PSPF_MIRROR|PSPF_FLIP,1);
			} else {
				A_OverlayFlags(OverlayID(),PSPF_MIRROR|PSPF_FLIP,0);
			}
			invoker.GMod = GC_Gunslinger || CountInv("PowerGunzerking") ? 0.5 : 1.0;
			A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY);
		}
		//TNT1 A 0 A_JumpIf(CountInv("StruckerStratActive"),"LeftStratActive");
		TNT1 A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),3);
		TNT1 A 1;
		TNT1 A 0 {
			If(!invoker.WeapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				!(GC_Gunslinger || CountInv("PowerGunzerking")) &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ALTATTACK) {
					Return ResolveState("HandCast");
			}
			If(!invoker.WeapSwitch && !CountInv("GCCantFire") && !invoker.LeftHand &&
				!(GC_Gunslinger || CountInv("PowerGunzerking")) && GetCvar("GC_Trogdor") &&
				GetPlayerInput(INPUT_BUTTONS) & BT_ZOOM) {
					Return ResolveState("DeadPunchEnter");
				}
			Return ResolveState(Null);
		}
		Loop;
		STSG A 0 A_JumpIf(CountInv("StruckerStratActive"),2);
		STRG A 0;
		"####" "#" 1;
		"####" A 0 A_JumpIf(!invoker.WeapSwitch && !CountInv("GCCantFire") &&
							GetPlayerInput(INPUT_BUTTONS) & BT_ATTACK, "LeftFire");
        Loop;
	LeftFire:
		"####" A 0 A_JumpIf(GC_Gunslinger || CountInv("PowerGunzerking"),2);
		"####" A 0 A_CheckReload;
		"####" A 0 A_JumpIfNoAmmo("LeftActive");
		"####" A 0 A_JumpIf(CountInv("StruckerStratActive"),"LeftStratFire");
		STRG O 1 Bright {
			invoker.WeapAction++;
			invoker.LeftHand = 1;
			A_OverlayOffset(OverlayID(),1 + invoker.GunzX,1 + invoker.GunzY,WOF_INTERPOLATE);
			A_Overlay(4,"LeftRecoil");
			
			A_FireBullets(2,0.4,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM); //A_FireBullets(4,0.8,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			for(invoker.Loopler = 0; invoker.Loopler <= 3; invoker.Loopler++)
            {
                A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,-2.0 - (invoker.GunzX * 0.15) ,5.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
			}
			A_PlaySound("Strucker/Load",6,0.5);
			A_PlaySound("Strucker/AltFire",1,0.5);
			A_AlertMonsters();
		}
		STRG H 1 {
			A_OverlayOffset(OverlayID(),5 + invoker.GunzX,8 + invoker.GunzY,WOF_INTERPOLATE);
			A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-20 - (invoker.GunzX*0.5),-12 - (invoker.GunzY * 0.5),FPF_NOAUTOAIM);
		}
		STRG J 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX, 	5 + invoker.GunzY,WOF_INTERPOLATE);
		STRG M 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX, 3 + invoker.GunzY,WOF_INTERPOLATE);
		STRG N 1 Bright {
			A_OverlayOffset(OverlayID(),1 + invoker.GunzX,1 + invoker.GunzY,WOF_INTERPOLATE);
			A_FireBullets(2,0.4,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM); //A_FireBullets(4,0.8,7,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			for(invoker.Loopler = 0; invoker.Loopler <= 3; invoker.Loopler++)
            {
				A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,-2.0 - (invoker.GunzX * 0.15) ,0.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
			}
			A_PlaySound("Strucker/AltFire",5,0.5);
			A_AlertMonsters();
			
		}
		STRG H 1 {
			A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-20 - (invoker.GunzX*0.5),-12 - (invoker.GunzY * 0.5),FPF_NOAUTOAIM);
			A_OverlayOffset(OverlayID(),5 + invoker.GunzX,8 + invoker.GunzY,WOF_INTERPOLATE);
		}
		STRG J 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX,5 + invoker.GunzY,WOF_INTERPOLATE);
		STRG M 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX,3 + invoker.GunzY,WOF_INTERPOLATE);
		STRG A 0 { invoker.WeapAction--; invoker.LeftHand = 0; }
		Goto LeftActive;
	LeftRecoil:
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(1, 1, 1, 8, 0, 24, "none", QF_SCALEDOWN); }
			A_SetPitch(pitch-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.995); }
			/*A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);*/
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.1 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.995); }
			/*A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);*/
		}
		TNT1 A 0 A_ZoomFactor(1.0);
		Stop;
	LeftStratFire:	
		STSG F 1 Bright {
			invoker.WeapAction++;
			invoker.LeftHand = 1;
			A_OverlayOffset(OverlayID(),1 + invoker.GunzX,2 + invoker.GunzY,WOF_INTERPOLATE);
			A_Overlay(4,"LeftStratRecoil");
			
			A_FireBullets(2,0.4,1,30*frandom(1.0,3.0),invoker.DrillSlugPuffClass,FBF_USEAMMO|FBF_NORANDOM); //A_FireBullets(2,0.4,14,5*frandom(1.0,3.0),invoker.HBulletPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			A_FireBullets(2,0.4,1,30*frandom(1.0,3.0),invoker.DrillSlugPuffClass,FBF_USEAMMO|FBF_NORANDOM);
			for(invoker.Loopler = 0; invoker.Loopler <= 7; invoker.Loopler++)
            {
                A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,-2.0 - (invoker.GunzX * 0.15) ,5.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
				A_FireProjectile("Gunsmoke_Small",frandom(4.0,-4.0),0,-2.0 - (invoker.GunzX * 0.15) ,0.0 - (invoker.GunzY * 0.15),FPF_NOAUTOAIM,frandom(4.0,-4.0));
			}
			
			A_PlaySound("Strucker/Fire",1,0.6);
			A_PlaySound("Strucker/Add",5,0.4);
			A_AlertMonsters();
			
		}
		STSG G 1 Bright A_OverlayOffset(OverlayID(),2 + invoker.GunzX,6 + invoker.GunzY,WOF_INTERPOLATE);
		STSG H 1 A_OverlayOffset(OverlayID(),8  + invoker.GunzX,15 + invoker.GunzY,WOF_INTERPOLATE);
		STSG I 1 A_OverlayOffset(OverlayID(),10 + invoker.GunzX,22 + invoker.GunzY,WOF_INTERPOLATE);
		STSG J 1 A_OverlayOffset(OverlayID(),12 + invoker.GunzX,25 + invoker.GunzY,WOF_INTERPOLATE);
		STSG K 1 {
			A_OverlayOffset(OverlayID(),15 + invoker.GunzX,27 + invoker.GunzY,WOF_INTERPOLATE);
			A_PlaySound("Strucker/Load",6,0.5);
			A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-20 - (invoker.GunzX * 0.5),-12 - (invoker.GunzY*0.5),FPF_NOAUTOAIM);
		}
		STSG L 1 A_OverlayOffset(OverlayID(),17 + invoker.GunzX,29 + invoker.GunzY,WOF_INTERPOLATE);
		STSG M 1 {
			A_OverlayOffset(OverlayID(),20 + invoker.GunzX,28  + invoker.GunzY,WOF_INTERPOLATE);
			A_FireProjectile("ShottyCasingSpawnerLeft",0,0,-20 - (invoker.GunzX * 0.5),-12 - (invoker.GunzY*0.5),FPF_NOAUTOAIM);
		}
		STSG D 1 A_OverlayOffset(OverlayID(),21 + invoker.GunzX,27 + invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),19 + invoker.GunzX,24 + invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),14 + invoker.GunzX,21 + invoker.GunzY,WOF_INTERPOLATE);
		STSG B 1 A_OverlayOffset(OverlayID(),8 + invoker.GunzX,13 + invoker.GunzY,WOF_INTERPOLATE);
		STSG B 1 A_OverlayOffset(OverlayID(),4 + invoker.GunzX,7 + invoker.GunzY,WOF_INTERPOLATE);
		STSG C 1 A_OverlayOffset(OverlayID(),3 + invoker.GunzX,5 + invoker.GunzY,WOF_INTERPOLATE);
		STSG C 1 A_OverlayOffset(OverlayID(),2 + invoker.GunzX,3 + invoker.GunzY,WOF_INTERPOLATE);
		STSG D 1 A_OverlayOffset(OverlayID(),1 + invoker.GunzX,1 + invoker.GunzY,WOF_INTERPOLATE);
		STSG A 1 A_OverlayOffset(OverlayID(),invoker.GunzX,invoker.GunzY,WOF_INTERPOLATE);
		STSG A 0 { invoker.WeapAction--; invoker.LeftHand = 0; }
		Goto LeftActive;
	LeftStratRecoil:
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.995); }
			if(GetCvar("GC_QuakeRecoil")) { A_QuakeEx(3, 3, 3, 8, 0, 24, "none", QF_SCALEDOWN); }
			A_SetPitch(pitch-0.75 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.75 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch-1.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+1.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch-1.0 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+1.0 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetPitch(pitch-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetPitch(pitch-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.955); }
			A_SetPitch(pitch+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.95); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.96); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.97); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.98); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(0.99); }
			A_SetPitch(pitch+0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.5 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		TNT1 A 1 {
			if(GetCvar("GC_ZoomRecoil")) { A_ZoomFactor(1.0); }
			A_SetPitch(pitch+0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
			A_SetAngle(angle-0.25 * GetCvar("GC_WeaponRecoil") * invoker.GMod, SPF_INTERPOLATE);
		}
		Stop;
		
	//CAST.
		
	CastHandLaunch:
		"####" "#" 0 A_Overlay(-4,"CastUnhand");
		TNT1 A 4;
		Goto CastLaunch+3;
	CastUnhand:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),97,120);
		"####" "#" 1 A_OverlayOffset(OverlayID(),90,131,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),81,153,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),77,165,WOF_INTERPOLATE);
		Stop; //This part is important.
	CastHandEnd:
		"####" "#" 0 A_Overlay(-4,"CastUphand");
		TNT1 A 4;
		Goto LeftActive;
	CastUphand:
		CYOH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitToken"),7);
		CYDH D 0 A_JumpIf(CountInv("PowerDeadmaker") && CountInv("PowerSuitDraugh"),6);
		CYNH D 0 A_JumpIf(CountInv("PowerDeadmaker"),5);
		CYCH D 0 A_JumpIf(CountInv("PowerSuitToken"),4);
		CYUH D 0 A_JumpIf(CountInv("PowerSuitProtect"),3);
		CYYH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYGH D 0;
		"####" "#" 1 A_OverlayOffset(OverlayID(),77,165);
		"####" "#" 1 A_OverlayOffset(OverlayID(),81,153,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),90,131,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),97,120,WOF_INTERPOLATE);
		Goto RightActive2;
		
	//DEADMAKER PUNCH.
	
	DeadPunchEnter:
		TNT1 A 7 { invoker.LeftHand = 1; A_Overlay(-4,"DeadPunchEnterAnim"); }
		Goto DeadPunchStart;
	DeadPunchEnterAnim:
		CYOH D 0 A_JumpIf(CountInv("PowerSuitToken"),3);
		CYDH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYNH D 0;
		"####" "#" 1 {
			A_OverlayOffset(OverlayID(),97,120);
		}
		"####" "#" 1 A_OverlayOffset(OverlayID(),90,131,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),81,153,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),77,165,WOF_INTERPOLATE);
		Stop;
	DeadPunchExit:
		TNT1 A 4 { invoker.LeftHand = 1; A_Overlay(-4,"DeadPunchExitAnim"); }
		Goto LeftActive;
	DeadPunchExitAnim:
		CYOH D 0 A_JumpIf(CountInv("PowerSuitToken"),3);
		CYDH D 0 A_JumpIf(CountInv("PowerSuitDraugh"),2);
		CYNH D 0;
		"####" "#" 1 {
			A_OverlayOffset(OverlayID(),77,165);
		}
		"####" "#" 1 A_OverlayOffset(OverlayID(),81,153,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),90,131,WOF_INTERPOLATE);
		"####" "#" 1 A_OverlayOffset(OverlayID(),97,120,WOF_INTERPOLATE);
		"####" "#" 0 { invoker.LeftHand = 0; A_Overlay(-4,"RightActive2"); }
		Stop;
	
	// Dino's dummy animation
	DeadChargeAnimationOverride:
		STSG A 0 A_JumpIf(CountInv("StruckerStratActive"),2);
		STRG A 0;
		"####" "#" 1 {
			if(!invoker.weapSwitch) { 
				A_Overlay(-4,"CastUphand");
				Return ResolveState("RightActive"); 
			}
			Return ResolveState(null);
		}
		Loop;
	}
}

#endregion
